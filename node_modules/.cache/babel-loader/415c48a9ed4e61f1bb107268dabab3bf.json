{"ast":null,"code":"var _jsxFileName = \"/Users/zhangzhengtian/Desktop/NEU/5610/quiz6/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport shuffle from \"lodash.shuffle\";\nimport \"./App.css\"; // image for the pokemon\n// https://assets.pokemon.com/assets/cms2/img/pokedex/full/${pokemon.id}.png\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet moves = 0;\nconst pokemon = [{\n  id: \"004\",\n  name: \"charizard\"\n}, {\n  id: \"010\",\n  name: \"caterpie\"\n}, {\n  id: \"077\",\n  name: \"ponyta\"\n}, {\n  id: \"108\",\n  name: \"lickitung\"\n}, {\n  id: \"132\",\n  name: \"ditto\"\n}, {\n  id: \"133\",\n  name: \"eevee\"\n}];\nconst doublePokemon = shuffle([...pokemon, ...pokemon]);\nexport default function App() {\n  _s();\n\n  const [opened, setOpened] = useState([]);\n\n  function flipCard(index) {\n    moves++;\n\n    if (moves % 2 == 0) {\n      opened = [];\n    } // if same card was clicked\n\n\n    if (opened.includes(index)) {\n      /* setOpened([...opened, index]); */\n      return;\n    }\n\n    setOpened([...opened, index]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [moves, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: doublePokemon.map((pokemon, index) => {\n        let isFlipped = false;\n\n        if (opened.includes(index)) {\n          isFlipped = true;\n        }\n\n        return /*#__PURE__*/_jsxDEV(PokemonCard, {\n          index: index,\n          pokemon: pokemon,\n          isFlipped: isFlipped,\n          flipCard: flipCard\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fxuCMPeqV6ps3GKnAgZz1uZ4NKs=\");\n\n_c = App;\n\nfunction PokemonCard(_ref) {\n  let {\n    index,\n    pokemon,\n    isFlipped,\n    flipCard\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `pokemon-card ${isFlipped ? \"flipped\" : \"\"}`,\n    onClick: () => flipCard(index),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"front\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${pokemon.id}.png`,\n          alt: pokemon.name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = PokemonCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PokemonCard\");","map":{"version":3,"sources":["/Users/zhangzhengtian/Desktop/NEU/5610/quiz6/src/App.js"],"names":["React","useState","useEffect","shuffle","moves","pokemon","id","name","doublePokemon","App","opened","setOpened","flipCard","index","includes","map","isFlipped","PokemonCard"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport shuffle from \"lodash.shuffle\";\nimport \"./App.css\";\n\n// image for the pokemon\n// https://assets.pokemon.com/assets/cms2/img/pokedex/full/${pokemon.id}.png\nlet moves = 0;\n\nconst pokemon = [\n  { id: \"004\", name: \"charizard\" },\n  { id: \"010\", name: \"caterpie\" },\n  { id: \"077\", name: \"ponyta\" },\n  { id: \"108\", name: \"lickitung\" },\n  { id: \"132\", name: \"ditto\" },\n  { id: \"133\", name: \"eevee\" },\n];\nconst doublePokemon = shuffle([...pokemon, ...pokemon]);\n\nexport default function App() {\n  const [opened, setOpened] = useState([]);\n\n  function flipCard(index) {\n    moves++;\n    if (moves % 2 == 0) {\n      opened = [];\n    }\n    // if same card was clicked\n    if (opened.includes(index)) {\n      /* setOpened([...opened, index]); */\n      return;\n    }\n    setOpened([...opened, index]);\n  }\n\n  return (\n    <div className=\"app\">\n      <p>\n        {moves} <strong>moves</strong>\n      </p>\n\n      <div className=\"cards\">\n        {doublePokemon.map((pokemon, index) => {\n          let isFlipped = false;\n\n          if (opened.includes(index)) {\n            isFlipped = true;\n          }\n\n          return (\n            <PokemonCard\n              key={index}\n              index={index}\n              pokemon={pokemon}\n              isFlipped={isFlipped}\n              flipCard={flipCard}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction PokemonCard({ index, pokemon, isFlipped, flipCard }) {\n  return (\n    <button\n      className={`pokemon-card ${isFlipped ? \"flipped\" : \"\"}`}\n      onClick={() => flipCard(index)}\n    >\n      <div className=\"inner\">\n        <div className=\"front\">\n          <img\n            src={`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${pokemon.id}.png`}\n            alt={pokemon.name}\n            width=\"100\"\n          />\n        </div>\n        <div className=\"back\">?</div>\n      </div>\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}